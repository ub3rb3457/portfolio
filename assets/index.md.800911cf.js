import{_ as a,c as n,o as s,a as t}from"./app.38aade4f.js";const h='{"title":"ReplaceMe","description":"","frontmatter":{"head":[["link",{"rel":"icon","href":"favicon.ico"}]]},"headers":[{"level":2,"title":"Installation","slug":"installation"},{"level":2,"title":"Import Component","slug":"import-component"},{"level":3,"title":"Script setup syntax","slug":"script-setup-syntax"},{"level":3,"title":"Composition API syntax","slug":"composition-api-syntax"},{"level":2,"title":"Props","slug":"props"},{"level":3,"title":"text","slug":"text"},{"level":2,"title":"Slots","slug":"slots"},{"level":3,"title":"default","slug":"default"},{"level":2,"title":"Uninstall","slug":"uninstall"}],"relativePath":"index.md"}',e={},p=t(`<h1 id="replaceme" tabindex="-1">ReplaceMe <a class="header-anchor" href="#replaceme" aria-hidden="true">#</a></h1><p>Welcome to the docs home page for the <code>ReplaceMe.vue</code> component!</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> @obewds/replace-me --save-dev
</code></pre></div><h2 id="import-component" tabindex="-1">Import Component <a class="header-anchor" href="#import-component" aria-hidden="true">#</a></h2><h3 id="script-setup-syntax" tabindex="-1">Script setup syntax <a class="header-anchor" href="#script-setup-syntax" aria-hidden="true">#</a></h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> ReplaceMe <span class="token keyword">from</span> <span class="token string">&#39;@obewds/replace-me&#39;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="composition-api-syntax" tabindex="-1">Composition API syntax <a class="header-anchor" href="#composition-api-syntax" aria-hidden="true">#</a></h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">

    <span class="token comment">// SomeNewComponent.vue</span>

    <span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
    <span class="token keyword">import</span> ReplaceMe <span class="token keyword">from</span> <span class="token string">&#39;@obewds/replace-me&#39;</span>

    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

        <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            ReplaceMe<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>

        <span class="token comment">// ...</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h2><h3 id="text" tabindex="-1">text <a class="header-anchor" href="#text" aria-hidden="true">#</a></h3><p>\u2705 - Type <code>String</code><br> \u274C - Not Required<br> \u274C - Doesn&#39;t Validate</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReplaceMe</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>My text prop string<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Outputs:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>My text prop string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If both the <code>text</code> prop and <code>slot</code> content are used, then the <code>text</code> prop takes precidence and the <code>slot</code> content will <strong>NOT</strong> render!</p></div><h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-hidden="true">#</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-hidden="true">#</a></h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ReplaceMe</span><span class="token punctuation">&gt;</span></span>
        My slot content
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ReplaceMe</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>Outputs:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>My slot content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="danger custom-block"><p class="custom-block-title">WARNING</p><p>If both the <code>text</code> prop and <code>slot</code> content are used, then the <code>text</code> prop takes precidence and the <code>slot</code> content will <strong>NOT</strong> render!</p></div><h2 id="uninstall" tabindex="-1">Uninstall <a class="header-anchor" href="#uninstall" aria-hidden="true">#</a></h2><div class="language-bash"><pre><code><span class="token function">npm</span> uninstall @obewds/replace-me
</code></pre></div>`,24),o=[p];function c(l,i,r,d,u,k){return s(),n("div",null,o)}var m=a(e,[["render",c]]);export{h as __pageData,m as default};
